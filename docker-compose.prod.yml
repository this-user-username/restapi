version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: restapi-postgres
    environment:
      POSTGRES_DB: restapi_prod
      POSTGRES_USER: restapi_user
      POSTGRES_PASSWORD: restapi_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restapi_user -d restapi_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - restapi-network

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restapi-app
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/restapi_prod
      DATABASE_USERNAME: restapi_user
      DATABASE_PASSWORD: restapi_password
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - restapi-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: restapi-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@restapi.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - restapi-network

volumes:
  postgres_prod_data:

networks:
  restapi-network:
    driver: bridge